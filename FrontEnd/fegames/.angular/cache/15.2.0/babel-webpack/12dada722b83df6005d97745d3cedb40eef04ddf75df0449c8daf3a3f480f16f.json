{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../websocket.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../games.service\";\nimport * as i4 from \"../shared-data.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nconst _c0 = function (a0) {\n  return {\n    \"filled\": a0\n  };\n};\nfunction JuegoComponent_tr_2_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\")(1, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function JuegoComponent_tr_2_td_1_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const cellIndex_r6 = restoredCtx.index;\n      const rowIndex_r3 = i0.ɵɵnextContext().index;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.onCellClick(rowIndex_r3, cellIndex_r6));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const cell_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c0, cell_r5 !== 0));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", cell_r5 || \"\", \" \");\n  }\n}\nfunction JuegoComponent_tr_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, JuegoComponent_tr_2_td_1_Template, 3, 4, \"td\", 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", row_r2);\n  }\n}\nfunction JuegoComponent_li_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"span\", 9);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const message_r10 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(message_r10.author);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\": \", message_r10.text, \" \");\n  }\n}\nexport class JuegoComponent {\n  constructor(websocketService, router, gameService, sharedDataService) {\n    this.websocketService = websocketService;\n    this.router = router;\n    this.gameService = gameService;\n    this.sharedDataService = sharedDataService;\n    this.byteArray = [];\n    this.chatMessages = []; // Añadir variable para almacenar los mensajes del chat\n    this.newMessage = ''; // Añadir variable para almacenar el mensaje que el usuario está escribiendo\n  }\n\n  ngOnInit() {\n    console.log(this.sharedDataService.id);\n    this.gameService.getByteArray(this.sharedDataService.username).subscribe(integerList => {\n      this.byteArray = integerList;\n    });\n    this.websocketService.connect(\"ws://localhost:80/wsGames\").subscribe();\n    this.websocketService.socket$.subscribe(messageEvent => {\n      console.log('WebSocket message received:', messageEvent.data);\n      const messageData = JSON.parse(messageEvent.data);\n      switch (this.sharedDataService.type) {\n        case 'MOVEMENT':\n          break;\n        case 'CHAT':\n          // Añadir la lógica para manejar el mensaje de chat recibido\n          this.chatMessages.push({\n            author: messageData.author,\n            text: messageData.text\n          });\n          break;\n        case 'BROADCAST':\n          break;\n        default:\n          console.warn('Unrecognized message type:', messageData.type);\n      }\n    });\n  }\n  onCellClick(rowIndex, cellIndex) {\n    console.log(`Celda seleccionada: Fila ${rowIndex}, columna ${cellIndex}`);\n    // LOGICA Y CONECTAR BACK\n  }\n\n  onAddDigitsClick() {\n    console.log('Agregar dígitos');\n    // CONECTAR BACK\n  }\n\n  onSendMessageClick() {\n    console.log('Enviar mensaje:', this.newMessage);\n    // Lógica para enviar el mensaje de chat a través del WebSocket\n    this.websocketService.sendChat('all', this.newMessage); // 'all' es un ejemplo de cómo indicar un mensaje global a todos los usuarios\n    // Vaciar el campo de entrada después de enviar el mensaje\n    this.newMessage = '';\n  }\n}\nJuegoComponent.ɵfac = function JuegoComponent_Factory(t) {\n  return new (t || JuegoComponent)(i0.ɵɵdirectiveInject(i1.WebSocketService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.GamesService), i0.ɵɵdirectiveInject(i4.SharedDataService));\n};\nJuegoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: JuegoComponent,\n  selectors: [[\"app-juego\"]],\n  decls: 14,\n  vars: 3,\n  consts: [[1, \"game-board\"], [4, \"ngFor\", \"ngForOf\"], [1, \"actions\"], [3, \"click\"], [1, \"chat\"], [1, \"chat-messages\"], [1, \"chat-input\"], [\"placeholder\", \"Escribe un mensaje\", 3, \"ngModel\", \"ngModelChange\"], [1, \"cell\", 3, \"ngClass\", \"click\"], [1, \"message-author\"]],\n  template: function JuegoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"table\");\n      i0.ɵɵtemplate(2, JuegoComponent_tr_2_Template, 2, 1, \"tr\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function JuegoComponent_Template_button_click_4_listener() {\n        return ctx.onAddDigitsClick();\n      });\n      i0.ɵɵtext(5, \"Agregar d\\u00EDgitos\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(6, \"div\", 4)(7, \"div\", 5)(8, \"ul\");\n      i0.ɵɵtemplate(9, JuegoComponent_li_9_Template, 4, 2, \"li\", 1);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 6)(11, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function JuegoComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.newMessage = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function JuegoComponent_Template_button_click_12_listener() {\n        return ctx.onSendMessageClick();\n      });\n      i0.ɵɵtext(13, \"Enviar\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.byteArray);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngForOf\", ctx.chatMessages);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.newMessage);\n    }\n  },\n  dependencies: [i5.NgClass, i5.NgForOf, i6.DefaultValueAccessor, i6.NgControlStatus, i6.NgModel],\n  styles: [\".game-board[_ngcontent-%COMP%]   table[_ngcontent-%COMP%] {\\r\\n    border-collapse: collapse;\\r\\n    margin: 0 auto;\\r\\n  }\\r\\n  .game-board[_ngcontent-%COMP%]   td[_ngcontent-%COMP%] {\\r\\n    border: 1px solid #ccc;\\r\\n    width: 30px;\\r\\n    height: 30px;\\r\\n    text-align: center;\\r\\n    vertical-align: middle;\\r\\n  }\\r\\n  .game-board[_ngcontent-%COMP%]   .cell[_ngcontent-%COMP%] {\\r\\n    display: block;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    line-height: 30px;\\r\\n  }\\r\\n  .game-board[_ngcontent-%COMP%]   .filled[_ngcontent-%COMP%] {\\r\\n    font-weight: bold;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvanVlZ28vanVlZ28uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHlCQUF5QjtJQUN6QixjQUFjO0VBQ2hCO0VBQ0E7SUFDRSxzQkFBc0I7SUFDdEIsV0FBVztJQUNYLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsc0JBQXNCO0VBQ3hCO0VBQ0E7SUFDRSxjQUFjO0lBQ2QsV0FBVztJQUNYLFlBQVk7SUFDWixpQkFBaUI7RUFDbkI7RUFDQTtJQUNFLGlCQUFpQjtFQUNuQiIsInNvdXJjZXNDb250ZW50IjpbIi5nYW1lLWJvYXJkIHRhYmxlIHtcclxuICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XHJcbiAgICBtYXJnaW46IDAgYXV0bztcclxuICB9XHJcbiAgLmdhbWUtYm9hcmQgdGQge1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcclxuICAgIHdpZHRoOiAzMHB4O1xyXG4gICAgaGVpZ2h0OiAzMHB4O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICB9XHJcbiAgLmdhbWUtYm9hcmQgLmNlbGwge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGxpbmUtaGVpZ2h0OiAzMHB4O1xyXG4gIH1cclxuICAuZ2FtZS1ib2FyZCAuZmlsbGVkIHtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIH1cclxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","JuegoComponent","constructor","websocketService","router","gameService","sharedDataService","ngOnInit","console","log","id","getByteArray","username","subscribe","integerList","byteArray","connect","socket$","messageEvent","data","messageData","JSON","parse","type","chatMessages","push","author","text","warn","onCellClick","rowIndex","cellIndex","onAddDigitsClick","onSendMessageClick","newMessage","sendChat","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\nacho\\OneDrive\\Documentos\\GitHub\\DISENO-APP\\FrontEnd\\fegames\\src\\app\\juego\\juego.component.html","C:\\Users\\nacho\\OneDrive\\Documentos\\GitHub\\DISENO-APP\\FrontEnd\\fegames\\src\\app\\juego\\juego.component.ts"],"sourcesContent":["<div class=\"game-board\">\r\n  <table>\r\n    <tr *ngFor=\"let row of byteArray; let rowIndex = index\">\r\n      <td *ngFor=\"let cell of row; let cellIndex = index\">\r\n        <button\r\n          class=\"cell\"\r\n          [ngClass]=\"{'filled': cell !== 0}\"\r\n          (click)=\"onCellClick(rowIndex, cellIndex)\"\r\n        >\r\n          {{ cell || '' }}\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  </table>\r\n  <div class=\"actions\">\r\n    <button (click)=\"onAddDigitsClick()\">Agregar dígitos</button>\r\n  </div>\r\n</div>\r\n\r\n<!-- Añadir sección de chat -->\r\n<div class=\"chat\">\r\n  <div class=\"chat-messages\">\r\n    <ul>\r\n      <li *ngFor=\"let message of chatMessages\">\r\n        <span class=\"message-author\">{{ message.author }}</span>: {{ message.text }}\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"chat-input\">\r\n    <input [(ngModel)]=\"newMessage\" placeholder=\"Escribe un mensaje\" />\r\n    <button (click)=\"onSendMessageClick()\">Enviar</button>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { GamesService } from '../games.service';\nimport { SharedDataService } from '../shared-data.service';\nimport { Router } from '@angular/router';\nimport { WebSocketService } from '../websocket.service';\n\n@Component({\n  selector: 'app-juego',\n  templateUrl: './juego.component.html',\n  styleUrls: ['./juego.component.css']\n})\nexport class JuegoComponent implements OnInit {\n\n  byteArray: number[][] = [];\n  chatMessages: Array<{ author: string, text: string }> = []; // Añadir variable para almacenar los mensajes del chat\n  newMessage: string = ''; // Añadir variable para almacenar el mensaje que el usuario está escribiendo\n\n  constructor(private websocketService: WebSocketService, private router: Router, private gameService: GamesService, private sharedDataService: SharedDataService) {\n\n  }\n\n  ngOnInit(): void {\n\n    console.log(this.sharedDataService.id);\n    this.gameService.getByteArray(this.sharedDataService.username).subscribe(integerList => {\n      this.byteArray = integerList;\n    });\n\n    this.websocketService.connect(\"ws://localhost:80/wsGames\").subscribe();\n\n    this.websocketService.socket$.subscribe((messageEvent: MessageEvent) => {\n      console.log('WebSocket message received:', messageEvent.data);\n\n      const messageData = JSON.parse(messageEvent.data);\n      switch (this.sharedDataService.type) {\n        case 'MOVEMENT':\n\n          break;\n        case 'CHAT':\n          // Añadir la lógica para manejar el mensaje de chat recibido\n          this.chatMessages.push({ author: messageData.author, text: messageData.text });\n          break;\n        case 'BROADCAST':\n\n          break;\n        default:\n          console.warn('Unrecognized message type:', messageData.type);\n      }\n    });\n\n  }\n\n  onCellClick(rowIndex: number, cellIndex: number): void {\n    console.log(`Celda seleccionada: Fila ${rowIndex}, columna ${cellIndex}`);\n    // LOGICA Y CONECTAR BACK\n  }\n\n  onAddDigitsClick(): void {\n    console.log('Agregar dígitos');\n    // CONECTAR BACK\n  }\n\n  onSendMessageClick(): void {\n    console.log('Enviar mensaje:', this.newMessage);\n    // Lógica para enviar el mensaje de chat a través del WebSocket\n    this.websocketService.sendChat('all', this.newMessage); // 'all' es un ejemplo de cómo indicar un mensaje global a todos los usuarios\n    // Vaciar el campo de entrada después de enviar el mensaje\n    this.newMessage = '';\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}